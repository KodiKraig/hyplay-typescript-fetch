/* tslint:disable */
/* eslint-disable */
/**
 * HYPLAY API
 * HYPLAY API Specification
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: braydon@hytopia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateWalletRequest
 */
export interface UpdateWalletRequest {
    /**
     * The chain to deploy or import a contract on.
     * @type {string}
     * @memberof UpdateWalletRequest
     */
    chain?: UpdateWalletRequestChainEnum;
    /**
     * The deadline for the transaction as a timestamp in seconds.
     * @type {number}
     * @memberof UpdateWalletRequest
     */
    deadline?: number;
    /**
     * If true, the wallet will be upgraded to the latest available wallet implementation for the provided chain.
     * @type {boolean}
     * @memberof UpdateWalletRequest
     */
    upgradeToLatest?: boolean;
    /**
     * An array of signatures to authorize the upgrade.
     * @type {Array<string>}
     * @memberof UpdateWalletRequest
     */
    signatures?: Array<string>;
}


/**
 * @export
 */
export const UpdateWalletRequestChainEnum = {
    Hychain: 'HYCHAIN',
    HychainTestnet: 'HYCHAIN_TESTNET',
    Local: 'LOCAL'
} as const;
export type UpdateWalletRequestChainEnum = typeof UpdateWalletRequestChainEnum[keyof typeof UpdateWalletRequestChainEnum];


/**
 * Check if a given object implements the UpdateWalletRequest interface.
 */
export function instanceOfUpdateWalletRequest(value: object): value is UpdateWalletRequest {
    return true;
}

export function UpdateWalletRequestFromJSON(json: any): UpdateWalletRequest {
    return UpdateWalletRequestFromJSONTyped(json, false);
}

export function UpdateWalletRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateWalletRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'chain': json['chain'] == null ? undefined : json['chain'],
        'deadline': json['deadline'] == null ? undefined : json['deadline'],
        'upgradeToLatest': json['upgradeToLatest'] == null ? undefined : json['upgradeToLatest'],
        'signatures': json['signatures'] == null ? undefined : json['signatures'],
    };
}

export function UpdateWalletRequestToJSON(value?: UpdateWalletRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'chain': value['chain'],
        'deadline': value['deadline'],
        'upgradeToLatest': value['upgradeToLatest'],
        'signatures': value['signatures'],
    };
}

