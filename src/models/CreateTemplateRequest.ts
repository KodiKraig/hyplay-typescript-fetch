/* tslint:disable */
/* eslint-disable */
/**
 * HYPLAY API
 * HYPLAY API Specification
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: braydon@hytopia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateTemplateRequest
 */
export interface CreateTemplateRequest {
    /**
     * The name of the template.
     * @type {string}
     * @memberof CreateTemplateRequest
     */
    name: string;
    /**
     * A description of the template.
     * @type {string}
     * @memberof CreateTemplateRequest
     */
    description?: string;
    /**
     * The solidity source code of the template to compile. This must be a flattened contract with all imports inlined.
     * @type {string}
     * @memberof CreateTemplateRequest
     */
    solidity: string;
    /**
     * The contract from the inlined solidity source code that is intended to be deployed for this template.
     * @type {string}
     * @memberof CreateTemplateRequest
     */
    target: string;
}

/**
 * Check if a given object implements the CreateTemplateRequest interface.
 */
export function instanceOfCreateTemplateRequest(value: object): value is CreateTemplateRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('solidity' in value) || value['solidity'] === undefined) return false;
    if (!('target' in value) || value['target'] === undefined) return false;
    return true;
}

export function CreateTemplateRequestFromJSON(json: any): CreateTemplateRequest {
    return CreateTemplateRequestFromJSONTyped(json, false);
}

export function CreateTemplateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTemplateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'solidity': json['solidity'],
        'target': json['target'],
    };
}

export function CreateTemplateRequestToJSON(value?: CreateTemplateRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'description': value['description'],
        'solidity': value['solidity'],
        'target': value['target'],
    };
}

