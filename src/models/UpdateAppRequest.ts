/* tslint:disable */
/* eslint-disable */
/**
 * HYPLAY API
 * HYPLAY API Specification
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: braydon@hytopia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateAppRequest
 */
export interface UpdateAppRequest {
    /**
     * The assetId of the icon image.
     * @type {string}
     * @memberof UpdateAppRequest
     */
    iconImageAssetId?: string;
    /**
     * The assetId of the background image.
     * @type {string}
     * @memberof UpdateAppRequest
     */
    backgroundImageAssetId?: string;
    /**
     * The assetId of the logo image.
     * @type {string}
     * @memberof UpdateAppRequest
     */
    logoImageAssetId?: string;
    /**
     * An array of assetIds for media assets to be displayed for app promotional purposes. Such as the web page media gallery.
     * @type {Array<string>}
     * @memberof UpdateAppRequest
     */
    galleryMediaAssetIds?: Array<string>;
    /**
     * The name of the app.
     * @type {string}
     * @memberof UpdateAppRequest
     */
    name?: string;
    /**
     * A brief description of the app and what it is and does.
     * @type {string}
     * @memberof UpdateAppRequest
     */
    description?: string;
    /**
     * The URL of the app, such as its website or where users can learn more about it.
     * @type {string}
     * @memberof UpdateAppRequest
     */
    url?: string;
    /**
     * The URL of the app's Discord server.
     * @type {string}
     * @memberof UpdateAppRequest
     */
    discordUrl?: string;
    /**
     * The URL of the app's Twitter page.
     * @type {string}
     * @memberof UpdateAppRequest
     */
    twitterUrl?: string;
    /**
     * The URL of the app's Steam page.
     * @type {string}
     * @memberof UpdateAppRequest
     */
    steamUrl?: string;
    /**
     * The URL of the app's Apple iOS page.
     * @type {string}
     * @memberof UpdateAppRequest
     */
    appleIosUrl?: string;
    /**
     * The URL of the app's Apple Mac page.
     * @type {string}
     * @memberof UpdateAppRequest
     */
    appleMacUrl?: string;
    /**
     * The URL of the app's Google Play page.
     * @type {string}
     * @memberof UpdateAppRequest
     */
    googlePlayUrl?: string;
    /**
     * The URL of the app's Windows page.
     * @type {string}
     * @memberof UpdateAppRequest
     */
    microsoftUrl?: string;
    /**
     * The URL of the app's privacy policy.
     * @type {string}
     * @memberof UpdateAppRequest
     */
    privacyUrl?: string;
    /**
     * The URL of the app's terms of service.
     * @type {string}
     * @memberof UpdateAppRequest
     */
    termsUrl?: string;
    /**
     * An array of valid redirect URIs for the user authorization flows of the app.
     * @type {Array<string>}
     * @memberof UpdateAppRequest
     */
    redirectUris?: Array<string>;
    /**
     * If true, reset the secretKey of the app.
     * @type {boolean}
     * @memberof UpdateAppRequest
     */
    resetSecretKey?: boolean;
    /**
     * If true, reset the testSecretKey of the app.
     * @type {boolean}
     * @memberof UpdateAppRequest
     */
    resetTestSecretKey?: boolean;
}

/**
 * Check if a given object implements the UpdateAppRequest interface.
 */
export function instanceOfUpdateAppRequest(value: object): value is UpdateAppRequest {
    return true;
}

export function UpdateAppRequestFromJSON(json: any): UpdateAppRequest {
    return UpdateAppRequestFromJSONTyped(json, false);
}

export function UpdateAppRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateAppRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'iconImageAssetId': json['iconImageAssetId'] == null ? undefined : json['iconImageAssetId'],
        'backgroundImageAssetId': json['backgroundImageAssetId'] == null ? undefined : json['backgroundImageAssetId'],
        'logoImageAssetId': json['logoImageAssetId'] == null ? undefined : json['logoImageAssetId'],
        'galleryMediaAssetIds': json['galleryMediaAssetIds'] == null ? undefined : json['galleryMediaAssetIds'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'url': json['url'] == null ? undefined : json['url'],
        'discordUrl': json['discordUrl'] == null ? undefined : json['discordUrl'],
        'twitterUrl': json['twitterUrl'] == null ? undefined : json['twitterUrl'],
        'steamUrl': json['steamUrl'] == null ? undefined : json['steamUrl'],
        'appleIosUrl': json['appleIosUrl'] == null ? undefined : json['appleIosUrl'],
        'appleMacUrl': json['appleMacUrl'] == null ? undefined : json['appleMacUrl'],
        'googlePlayUrl': json['googlePlayUrl'] == null ? undefined : json['googlePlayUrl'],
        'microsoftUrl': json['microsoftUrl'] == null ? undefined : json['microsoftUrl'],
        'privacyUrl': json['privacyUrl'] == null ? undefined : json['privacyUrl'],
        'termsUrl': json['termsUrl'] == null ? undefined : json['termsUrl'],
        'redirectUris': json['redirectUris'] == null ? undefined : json['redirectUris'],
        'resetSecretKey': json['resetSecretKey'] == null ? undefined : json['resetSecretKey'],
        'resetTestSecretKey': json['resetTestSecretKey'] == null ? undefined : json['resetTestSecretKey'],
    };
}

export function UpdateAppRequestToJSON(value?: UpdateAppRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'iconImageAssetId': value['iconImageAssetId'],
        'backgroundImageAssetId': value['backgroundImageAssetId'],
        'logoImageAssetId': value['logoImageAssetId'],
        'galleryMediaAssetIds': value['galleryMediaAssetIds'],
        'name': value['name'],
        'description': value['description'],
        'url': value['url'],
        'discordUrl': value['discordUrl'],
        'twitterUrl': value['twitterUrl'],
        'steamUrl': value['steamUrl'],
        'appleIosUrl': value['appleIosUrl'],
        'appleMacUrl': value['appleMacUrl'],
        'googlePlayUrl': value['googlePlayUrl'],
        'microsoftUrl': value['microsoftUrl'],
        'privacyUrl': value['privacyUrl'],
        'termsUrl': value['termsUrl'],
        'redirectUris': value['redirectUris'],
        'resetSecretKey': value['resetSecretKey'],
        'resetTestSecretKey': value['resetTestSecretKey'],
    };
}

