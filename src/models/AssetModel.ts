/* tslint:disable */
/* eslint-disable */
/**
 * HYPLAY API
 * HYPLAY API Specification
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: braydon@hytopia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AssetModel
 */
export interface AssetModel {
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof AssetModel
     */
    id?: string;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof AssetModel
     */
    userId?: string;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof AssetModel
     */
    s3Url?: string;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof AssetModel
     */
    cdnUrl?: string;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof AssetModel
     */
    mime?: string;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof AssetModel
     */
    extension?: string;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof AssetModel
     */
    checksum?: string;
    /**
     * This field has not had a description added.
     * @type {number}
     * @memberof AssetModel
     */
    size?: number;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof AssetModel
     */
    updatedAt?: string;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof AssetModel
     */
    createdAt?: string;
}

/**
 * Check if a given object implements the AssetModel interface.
 */
export function instanceOfAssetModel(value: object): value is AssetModel {
    return true;
}

export function AssetModelFromJSON(json: any): AssetModel {
    return AssetModelFromJSONTyped(json, false);
}

export function AssetModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        's3Url': json['s3Url'] == null ? undefined : json['s3Url'],
        'cdnUrl': json['cdnUrl'] == null ? undefined : json['cdnUrl'],
        'mime': json['mime'] == null ? undefined : json['mime'],
        'extension': json['extension'] == null ? undefined : json['extension'],
        'checksum': json['checksum'] == null ? undefined : json['checksum'],
        'size': json['size'] == null ? undefined : json['size'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
    };
}

export function AssetModelToJSON(value?: AssetModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'userId': value['userId'],
        's3Url': value['s3Url'],
        'cdnUrl': value['cdnUrl'],
        'mime': value['mime'],
        'extension': value['extension'],
        'checksum': value['checksum'],
        'size': value['size'],
        'updatedAt': value['updatedAt'],
        'createdAt': value['createdAt'],
    };
}

