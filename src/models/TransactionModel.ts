/* tslint:disable */
/* eslint-disable */
/**
 * HYPLAY API
 * HYPLAY API Specification
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: braydon@hytopia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransactionModel
 */
export interface TransactionModel {
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof TransactionModel
     */
    id?: string;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof TransactionModel
     */
    walletId?: string;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof TransactionModel
     */
    sessionId?: string;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof TransactionModel
     */
    chain?: string;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof TransactionModel
     */
    relayerAddress?: string;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof TransactionModel
     */
    func?: string;
    /**
     * This field has not had a description added.
     * @type {object}
     * @memberof TransactionModel
     */
    args?: object;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof TransactionModel
     */
    value?: string;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof TransactionModel
     */
    hash?: string;
    /**
     * This field has not had a description added.
     * @type {string}
     * @memberof TransactionModel
     */
    createdAt?: string;
}

/**
 * Check if a given object implements the TransactionModel interface.
 */
export function instanceOfTransactionModel(value: object): value is TransactionModel {
    return true;
}

export function TransactionModelFromJSON(json: any): TransactionModel {
    return TransactionModelFromJSONTyped(json, false);
}

export function TransactionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'walletId': json['walletId'] == null ? undefined : json['walletId'],
        'sessionId': json['sessionId'] == null ? undefined : json['sessionId'],
        'chain': json['chain'] == null ? undefined : json['chain'],
        'relayerAddress': json['relayerAddress'] == null ? undefined : json['relayerAddress'],
        'func': json['func'] == null ? undefined : json['func'],
        'args': json['args'] == null ? undefined : json['args'],
        'value': json['value'] == null ? undefined : json['value'],
        'hash': json['hash'] == null ? undefined : json['hash'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
    };
}

export function TransactionModelToJSON(value?: TransactionModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'walletId': value['walletId'],
        'sessionId': value['sessionId'],
        'chain': value['chain'],
        'relayerAddress': value['relayerAddress'],
        'func': value['func'],
        'args': value['args'],
        'value': value['value'],
        'hash': value['hash'],
        'createdAt': value['createdAt'],
    };
}

