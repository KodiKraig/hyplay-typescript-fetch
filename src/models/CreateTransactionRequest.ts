/* tslint:disable */
/* eslint-disable */
/**
 * HYPLAY API
 * HYPLAY API Specification
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: braydon@hytopia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReadContractArgsParameterInner } from './ReadContractArgsParameterInner';
import {
    ReadContractArgsParameterInnerFromJSON,
    ReadContractArgsParameterInnerFromJSONTyped,
    ReadContractArgsParameterInnerToJSON,
} from './ReadContractArgsParameterInner';

/**
 * 
 * @export
 * @interface CreateTransactionRequest
 */
export interface CreateTransactionRequest {
    /**
     * The contract id to target.
     * @type {string}
     * @memberof CreateTransactionRequest
     */
    contractId?: string;
    /**
     * The address to target.
     * @type {string}
     * @memberof CreateTransactionRequest
     */
    address?: string;
    /**
     * The function name or function signature of the contract.
     * @type {string}
     * @memberof CreateTransactionRequest
     */
    func?: string;
    /**
     * An array of arguments to pass to the function.
     * @type {Array<ReadContractArgsParameterInner>}
     * @memberof CreateTransactionRequest
     */
    args?: Array<ReadContractArgsParameterInner>;
    /**
     * The amount of native token to send with the transaction.
     * @type {number}
     * @memberof CreateTransactionRequest
     */
    value?: number;
    /**
     * The nonce of the transaction.
     * @type {string}
     * @memberof CreateTransactionRequest
     */
    nonce?: string;
    /**
     * The deadline for the transaction as a timestamp in seconds.
     * @type {number}
     * @memberof CreateTransactionRequest
     */
    deadline?: number;
    /**
     * An array of signatures for the transaction.
     * @type {Array<string>}
     * @memberof CreateTransactionRequest
     */
    signatures?: Array<string>;
    /**
     * The chain the session is to be started for.
     * @type {string}
     * @memberof CreateTransactionRequest
     */
    chain?: CreateTransactionRequestChainEnum;
}


/**
 * @export
 */
export const CreateTransactionRequestChainEnum = {
    Hychain: 'HYCHAIN',
    HychainTestnet: 'HYCHAIN_TESTNET',
    Local: 'LOCAL'
} as const;
export type CreateTransactionRequestChainEnum = typeof CreateTransactionRequestChainEnum[keyof typeof CreateTransactionRequestChainEnum];


/**
 * Check if a given object implements the CreateTransactionRequest interface.
 */
export function instanceOfCreateTransactionRequest(value: object): value is CreateTransactionRequest {
    return true;
}

export function CreateTransactionRequestFromJSON(json: any): CreateTransactionRequest {
    return CreateTransactionRequestFromJSONTyped(json, false);
}

export function CreateTransactionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTransactionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'contractId': json['contractId'] == null ? undefined : json['contractId'],
        'address': json['address'] == null ? undefined : json['address'],
        'func': json['func'] == null ? undefined : json['func'],
        'args': json['args'] == null ? undefined : ((json['args'] as Array<any>).map(ReadContractArgsParameterInnerFromJSON)),
        'value': json['value'] == null ? undefined : json['value'],
        'nonce': json['nonce'] == null ? undefined : json['nonce'],
        'deadline': json['deadline'] == null ? undefined : json['deadline'],
        'signatures': json['signatures'] == null ? undefined : json['signatures'],
        'chain': json['chain'] == null ? undefined : json['chain'],
    };
}

export function CreateTransactionRequestToJSON(value?: CreateTransactionRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'contractId': value['contractId'],
        'address': value['address'],
        'func': value['func'],
        'args': value['args'] == null ? undefined : ((value['args'] as Array<any>).map(ReadContractArgsParameterInnerToJSON)),
        'value': value['value'],
        'nonce': value['nonce'],
        'deadline': value['deadline'],
        'signatures': value['signatures'],
        'chain': value['chain'],
    };
}

