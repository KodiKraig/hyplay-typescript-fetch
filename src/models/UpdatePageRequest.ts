/* tslint:disable */
/* eslint-disable */
/**
 * HYPLAY API
 * HYPLAY API Specification
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: braydon@hytopia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetPage200ResponseAllOfLinksInner } from './GetPage200ResponseAllOfLinksInner';
import {
    GetPage200ResponseAllOfLinksInnerFromJSON,
    GetPage200ResponseAllOfLinksInnerFromJSONTyped,
    GetPage200ResponseAllOfLinksInnerToJSON,
} from './GetPage200ResponseAllOfLinksInner';

/**
 * 
 * @export
 * @interface UpdatePageRequest
 */
export interface UpdatePageRequest {
    /**
     * Whether the pre-register section is visible.
     * @type {boolean}
     * @memberof UpdatePageRequest
     */
    preregisterVisible?: boolean;
    /**
     * The incentive text to display with the pre-register prompt.
     * @type {string}
     * @memberof UpdatePageRequest
     */
    preregisterIncentiveText?: string;
    /**
     * The id of the leaderboard to display.
     * @type {string}
     * @memberof UpdatePageRequest
     */
    leaderboardId?: string;
    /**
     * Whether the leaderboard section is visible.
     * @type {boolean}
     * @memberof UpdatePageRequest
     */
    leaderboardVisible?: boolean;
    /**
     * Whether the referral section is visible.
     * @type {boolean}
     * @memberof UpdatePageRequest
     */
    referralVisible?: boolean;
    /**
     * The title text to display in the referral section.
     * @type {string}
     * @memberof UpdatePageRequest
     */
    referralTitleText?: string;
    /**
     * The incentive text to display in the referral section.
     * @type {string}
     * @memberof UpdatePageRequest
     */
    referralIncentiveText?: string;
    /**
     * 
     * @type {Array<GetPage200ResponseAllOfLinksInner>}
     * @memberof UpdatePageRequest
     */
    links?: Array<GetPage200ResponseAllOfLinksInner>;
}

/**
 * Check if a given object implements the UpdatePageRequest interface.
 */
export function instanceOfUpdatePageRequest(value: object): value is UpdatePageRequest {
    return true;
}

export function UpdatePageRequestFromJSON(json: any): UpdatePageRequest {
    return UpdatePageRequestFromJSONTyped(json, false);
}

export function UpdatePageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePageRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'preregisterVisible': json['preregisterVisible'] == null ? undefined : json['preregisterVisible'],
        'preregisterIncentiveText': json['preregisterIncentiveText'] == null ? undefined : json['preregisterIncentiveText'],
        'leaderboardId': json['leaderboardId'] == null ? undefined : json['leaderboardId'],
        'leaderboardVisible': json['leaderboardVisible'] == null ? undefined : json['leaderboardVisible'],
        'referralVisible': json['referralVisible'] == null ? undefined : json['referralVisible'],
        'referralTitleText': json['referralTitleText'] == null ? undefined : json['referralTitleText'],
        'referralIncentiveText': json['referralIncentiveText'] == null ? undefined : json['referralIncentiveText'],
        'links': json['links'] == null ? undefined : ((json['links'] as Array<any>).map(GetPage200ResponseAllOfLinksInnerFromJSON)),
    };
}

export function UpdatePageRequestToJSON(value?: UpdatePageRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'preregisterVisible': value['preregisterVisible'],
        'preregisterIncentiveText': value['preregisterIncentiveText'],
        'leaderboardId': value['leaderboardId'],
        'leaderboardVisible': value['leaderboardVisible'],
        'referralVisible': value['referralVisible'],
        'referralTitleText': value['referralTitleText'],
        'referralIncentiveText': value['referralIncentiveText'],
        'links': value['links'] == null ? undefined : ((value['links'] as Array<any>).map(GetPage200ResponseAllOfLinksInnerToJSON)),
    };
}

