/* tslint:disable */
/* eslint-disable */
/**
 * HYPLAY API
 * HYPLAY API Specification
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: braydon@hytopia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SetAppStateRequest
 */
export interface SetAppStateRequest {
    /**
     * Any unique lookup key for this data. This can be things such as a hyplay user id, an internal battle match id for your game, some arbitrary settings identifier for a system of your app and more. Keys are flexible ways to create string based lookup identifiers for data you want to store/lookup. Keys are unique to your application and are not shared globally.
     * @type {string}
     * @memberof SetAppStateRequest
     */
    key?: string;
    /**
     * Public state data to set for the app or user.
     * @type {{ [key: string]: any; }}
     * @memberof SetAppStateRequest
     */
    publicState?: { [key: string]: any; };
    /**
     * Protected state data to set for the app or user.
     * @type {{ [key: string]: any; }}
     * @memberof SetAppStateRequest
     */
    protectedState?: { [key: string]: any; };
    /**
     * Private state data to set for the app or user.
     * @type {{ [key: string]: any; }}
     * @memberof SetAppStateRequest
     */
    privateState?: { [key: string]: any; };
    /**
     * If true, the state will be overwritten with the provided state. If false or omitted, the state will be deep merged with the provided state.
     * @type {boolean}
     * @memberof SetAppStateRequest
     */
    overwrite?: boolean;
}

/**
 * Check if a given object implements the SetAppStateRequest interface.
 */
export function instanceOfSetAppStateRequest(value: object): value is SetAppStateRequest {
    return true;
}

export function SetAppStateRequestFromJSON(json: any): SetAppStateRequest {
    return SetAppStateRequestFromJSONTyped(json, false);
}

export function SetAppStateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetAppStateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'key': json['key'] == null ? undefined : json['key'],
        'publicState': json['publicState'] == null ? undefined : json['publicState'],
        'protectedState': json['protectedState'] == null ? undefined : json['protectedState'],
        'privateState': json['privateState'] == null ? undefined : json['privateState'],
        'overwrite': json['overwrite'] == null ? undefined : json['overwrite'],
    };
}

export function SetAppStateRequestToJSON(value?: SetAppStateRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'key': value['key'],
        'publicState': value['publicState'],
        'protectedState': value['protectedState'],
        'privateState': value['privateState'],
        'overwrite': value['overwrite'],
    };
}

